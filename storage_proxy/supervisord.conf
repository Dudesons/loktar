[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
logfile=/logs/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/logs            ; ('AUTO' child log dir, default $TEMP)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[program:gunicorn]
directory=/app
command=/usr/local/bin/gunicorn -c /gunicorn/gunicorn_conf.py --log-level=info wsgi:app
environment=TDSDUMP=/tmp/freetds.log
user=loktar

stdout_logfile=/logs/gunicorn-stdout.log
stdout_logfile_maxbytes=1MB
stderr_logfile=/logs/gunicorn-stderr.log
stderr_logfile_maxbytes=1MB

autostart=true
autorestart=true
startsecs=1

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

[program:nginx]
command=/usr/sbin/nginx -c /nginx/nginx.conf
environment=TDSDUMP=/tmp/freetds.log
user=root

stdout_logfile=/logs/nginx-stdout.log
stdout_logfile_maxbytes=1MB
stderr_logfile=/logs/nginx-stderr.log
stderr_logfile_maxbytes=1MB

autostart=true
autorestart=true
startsecs=1

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true
